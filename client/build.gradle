version = '0.1.0'

dependencies {
    compileOnly 'com.google.gwt:gwt-user:2.8.0',
            'com.google.gwt:gwt-dev:2.8.0',
            'org.fusesource.restygwt:restygwt:2.2.0'
}

task compileGwt(dependsOn: classes, type: JavaExec) {
    ext.buildDir = "${project.buildDir}/gwt"
    ext.extraDir = "${project.buildDir}/extra"

    inputs.source sourceSets.main.java.srcDirs
    inputs.dir sourceSets.main.output.resourcesDir
    outputs.dir buildDir

    doFirst {
        file(buildDir).mkdirs()
    }

    main = 'com.google.gwt.dev.Compiler'

    classpath {
        [
                sourceSets.main.java.srcDirs,           // Java source
                sourceSets.main.output.resourcesDir,    // Generated resources
                sourceSets.main.output.classesDir,      // Generated classes
                sourceSets.main.compileClasspath,       // Deps
        ]
    }

    args = [
            'org.codetaming.skillsmapper.SkillsMapper',
            '-war', buildDir,
            '-logLevel', 'INFO',
            '-localWorkers', '4',
            '-compileReport',
            '-extra', extraDir,
            '-style', 'OBF',
            '-optimize', '7' // 0=none, 9=max
    ]

    maxHeapSize = '512M'
}

compileJava.dependsOn(processResources)

jar.dependsOn compileGwt
jar {
    baseName = 'skillsmapper-client'
    into('static') {
        from compileGwt.buildDir
    }
}

cloudfoundry {
    space = "development"
    file = file("build/libs/skillsmapper-client-${version}.jar")
    uri = "skills-mapper-client.cfapps.io"
    memory = 512
    instances = 1
}
